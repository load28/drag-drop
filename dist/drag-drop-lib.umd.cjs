(function(i,s){typeof exports=="object"&&typeof module<"u"?s(exports):typeof define=="function"&&define.amd?define(["exports"],s):(i=typeof globalThis<"u"?globalThis:i||self,s(i.DragDrop={}))})(this,function(i){"use strict";var h=Object.defineProperty;var g=(i,s,n)=>s in i?h(i,s,{enumerable:!0,configurable:!0,writable:!0,value:n}):i[s]=n;var a=(i,s,n)=>g(i,typeof s!="symbol"?s+"":s,n);class s{constructor(e={}){a(this,"draggedElement",null);a(this,"originalPosition",null);a(this,"dropZones",new Set);a(this,"placeholder");a(this,"options");this.options={dragClass:"dragging",dropClass:"drop-zone",dragOverClass:"dragover",placeholderClass:"drag-placeholder",...e},this.placeholder=document.createElement("div"),this.placeholder.classList.add(this.options.placeholderClass),this.placeholder.style.display="none",this.onDragStart=this.onDragStart.bind(this),this.onDragEnd=this.onDragEnd.bind(this),this.onDragOver=this.onDragOver.bind(this),this.onDrop=this.onDrop.bind(this),this.onDragEnter=this.onDragEnter.bind(this),this.onDragLeave=this.onDragLeave.bind(this)}makeDraggable(e){e.setAttribute("draggable","true"),e.addEventListener("dragstart",this.onDragStart),e.addEventListener("dragend",this.onDragEnd)}makeDroppable(e){this.dropZones.add(e),e.addEventListener("dragover",this.onDragOver),e.addEventListener("drop",this.onDrop),e.addEventListener("dragenter",this.onDragEnter),e.addEventListener("dragleave",this.onDragLeave),e.classList.add(this.options.dropClass)}onDragStart(e){var r;const t=e.target;this.draggedElement=t,this.draggedElement.classList.add(this.options.dragClass),this.originalPosition={parent:t.parentElement,nextSibling:t.nextElementSibling};const o=t.getBoundingClientRect();this.placeholder.style.height=`${o.height}px`,this.placeholder.style.width=`${o.width}px`,this.placeholder.style.display="block",this.draggedElement.style.display="none",this.originalPosition.parent.insertBefore(this.placeholder,this.draggedElement),(r=e.dataTransfer)==null||r.setData("text/plain",""),e.dataTransfer&&(e.dataTransfer.effectAllowed="move")}onDragOver(e){e.preventDefault(),e.dataTransfer&&(e.dataTransfer.dropEffect="move");const t=e.target.closest(`.${this.options.dropClass}`);if(!t||!this.dropZones.has(t))return;this.dropZones.forEach(r=>{r.classList.toggle(this.options.dragOverClass,r===t)});const o=Array.from(t.querySelectorAll(".item")).filter(r=>r!==this.draggedElement);this.updatePlaceholderPosition(t,o,e.clientY)}updatePlaceholderPosition(e,t,o){let r=null;for(const d of t){const l=d.getBoundingClientRect();if(o<l.top+l.height/2){r=d;break}}r?e.insertBefore(this.placeholder,r):e.appendChild(this.placeholder)}onDrop(e){if(e.preventDefault(),!this.draggedElement||!this.originalPosition)return;const t=e.target.closest(`.${this.options.dropClass}`);if(!t||!this.dropZones.has(t))return;this.draggedElement.style.display="",this.draggedElement.classList.remove(this.options.dragClass),this.placeholder.parentNode?(t.insertBefore(this.draggedElement,this.placeholder),this.placeholder.parentNode.removeChild(this.placeholder)):t.appendChild(this.draggedElement),t.classList.remove(this.options.dragOverClass);const o={item:this.draggedElement,previousContainer:this.originalPosition.parent,container:t,newIndex:Array.from(t.children).indexOf(this.draggedElement)};document.dispatchEvent(new CustomEvent("drop-complete",{detail:o})),this.draggedElement=null,this.originalPosition=null}onDragEnd(e){e.preventDefault(),this.draggedElement&&this.originalPosition&&(this.draggedElement.style.display="",this.draggedElement.classList.remove(this.options.dragClass),this.originalPosition.nextSibling?this.originalPosition.parent.insertBefore(this.draggedElement,this.originalPosition.nextSibling):this.originalPosition.parent.appendChild(this.draggedElement)),this.placeholder.parentNode&&this.placeholder.parentNode.removeChild(this.placeholder),this.dropZones.forEach(t=>{t.classList.remove(this.options.dragOverClass)}),this.draggedElement=null,this.originalPosition=null}onDragEnter(e){const t=e.target.closest(`.${this.options.dropClass}`);t&&this.dropZones.has(t)&&t.classList.add(this.options.dragOverClass)}onDragLeave(e){const t=e.target.closest(`.${this.options.dropClass}`);t&&!t.contains(e.relatedTarget)&&t.classList.remove(this.options.dragOverClass)}}i.DragDrop=s,Object.defineProperty(i,Symbol.toStringTag,{value:"Module"})});
